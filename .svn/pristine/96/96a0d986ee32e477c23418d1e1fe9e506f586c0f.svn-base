package com.lzf.waterpolicy.fragment;

import org.json.JSONException;
import org.json.JSONObject;

import com.lzf.waterpolicy.HelpActivity;
import com.lzf.waterpolicy.R;
import com.lzf.waterpolicy.http.GetData;

import android.app.AlertDialog;
import android.app.ProgressDialog;
import android.app.AlertDialog.Builder;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.net.Uri;
import android.os.Bundle;
import android.os.Handler;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Toast;
import android.view.ViewGroup;

public class SystemSetFragment extends Fragment {

	private String message;
	private String ip;

	private final int UPDATE = 0;

	private ProgressDialog progress;
	private AlertDialog aDialog;

	private Handler handler = new Handler() {
		public void handleMessage(android.os.Message msg) {
			switch (msg.what) {
			case UPDATE:
				if (progress != null) {
					progress.dismiss();
				}
				if (message.equals("fail")) {
					Toast.makeText(getActivity(), "连接不到服务器，请检查你的网络或稍后重试。", Toast.LENGTH_SHORT).show();
				} else {
					try {
						JSONObject jObject = new JSONObject(message);
						if (jObject.getBoolean("success")) {
							if (jObject.getInt("data") > getVersionCode()) {
								Builder builder = new Builder(getActivity());
								aDialog = builder.setIcon(R.drawable.ic_launcher).setTitle("下载最新版本")
										.setNegativeButton("确定", new DialogInterface.OnClickListener() {
											@Override
											public void onClick(DialogInterface dialog, int which) {
												Uri uri = Uri
														.parse("http://" + ip + "/VersionNumber/VersionNumber.apk");
												Intent intent = new Intent(Intent.ACTION_VIEW, uri);
												startActivity(intent);
												aDialog.dismiss();
											}
										}).setPositiveButton("取消", new DialogInterface.OnClickListener() {
											@Override
											public void onClick(DialogInterface dialog, int which) {
												aDialog.dismiss();
											}
										}).setCancelable(false).create();
								aDialog.show(); // 显示对话框
							} else {
								Toast.makeText(getActivity(), "当前已是最新版本", Toast.LENGTH_SHORT).show();
							}
						} else {
							Toast.makeText(getActivity(), "服务器异常", Toast.LENGTH_SHORT).show();
						}
					} catch (JSONException e) {
						e.printStackTrace();
					}
				}
				break;
			default:
				break;
			}
		}
	};

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {

		SharedPreferences sp = getActivity().getSharedPreferences("userInfo", Context.MODE_PRIVATE);
		ip = sp.getString("ip", "192.168.2.89:4001");

		View view = inflater.inflate(R.layout.fragment_system_set, container, false);
		view.findViewById(R.id.updateRL).setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View arg0) {
				progress = ProgressDialog.show(getActivity(), null, "检查更新...", true, false);
				new Thread() {
					public void run() {
						message = GetData.getHtml("http://" + ip + "/Phone/Phone/VersionNumber");
						handler.sendEmptyMessage(UPDATE);
					}
				}.start();
			}
		});

		view.findViewById(R.id.helpRL).setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View arg0) {
				Intent intent = new Intent(getActivity(), HelpActivity.class);
				startActivity(intent);
			}
		});
		return view;
	}

	/*
	 * 获取当前程序的版本号
	 */
	private int getVersionCode() {
		// 获取packagemanager的实例
		PackageManager packageManager = getActivity().getPackageManager();
		// getPackageName()是你当前类的包名，0代表是获取版本信息
		PackageInfo packInfo = null;
		try {
			packInfo = packageManager.getPackageInfo(getActivity().getPackageName(), 0);
		} catch (NameNotFoundException e) {
			e.printStackTrace();
		}
		return packInfo.versionCode;
	}
}
